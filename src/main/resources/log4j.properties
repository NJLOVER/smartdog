log4j.rootLogger = info,console,log,errlog

#org.apache.log4j.HTMLLayout（以HTML表格形式布局），
#org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

#console的输出配置--按指定格式输出到控制台.
log4j.appender.console = org.apache.log4j.ConsoleAppender
log4j.appender.console.layout = org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern = %d{HH:mm:ss , SSS} [%t] %-5p %c{1} : %m%n

#pattern的配置规则如下:
#    %m?? 输出代码中指定的消息
#　　%p?? 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL?
#　　%r?? 输出自应用启动到输出该log信息耗费的毫秒数?
#　　%c?? 输出所属的类目，通常就是所在类的全名?
#　　%t?? 输出产生该日志事件的线程名?
#　　%n?? 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”?
#　　%d?? 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy?MMM?dd?HH:mm:ss?,?SSS}，输出类似：2002年10月18日??22?：?10?：?28?，?921??
#　　%l?? 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:?10?)?

#log的输出配置--每天生成一个独立的日志文件
log4j.appender.log = org.apache.log4j.DailyRollingFileAppender
log4j.appender.log.File = ${webapp.root}/WEB-INF/logs/err.log
log4j.appender.log.Append = true
#只输出error以上的日志
log4j.appender.log.Threshold = ERROR
log4j.appender.log.layout = org.apache.log4j.PatternLayout
log4j.appender.log.layout.ConversionPattern = %d{HH:mm:ss , SSS} [%t] %-5p %c{1} : %m%n

#errlog的输出配置,--超过50m生成一个新的日志文件
log4j.appender.errlog = org.apache.log4j.RollingFileAppender
log4j.appender.errlog.File = ${webapp.root}/WEB-INF/logs/sout.log
log4j.appender.errlog.MaxFileSize = 50000
log4j.appender.errlog.MaxBackupIndex = 4
log4j.appender.errlog.layout=org.apache.log4j.TTCCLayout
#log4j.appender.errlog.layout.ConversionPattern=%-d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

#log4j.appender.MAIL=org.apache.log4j.net.SMTPAppender
#日志的错误级别
#log4j.appender.MAIL.Threshold=ERROR
#缓存文件大小，日志达到512K时发送Email
#log4j.appender.MAIL.BufferSize=512
#发件人
#log4j.appender.MAIL.From=test@163.com
#发送邮件的服务器
#log4j.appender.MAIL.SMTPHost=smtp.163.com
#邮件的标题
#log4j.appender.MAIL.Subject=Log4J Message
#日志邮件的接收者
#log4j.appender.MAIL.To=test@163.com
#日志PatternLayout
#log4j.appender.MAIL.layout=org.apache.log4j.PatternLayout
#日志的格式
#log4j.appender.MAIL.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n
#log4j.appender.MAIL.SMTPUsername=
#log4j.appender.MAIL.SMTPPassword=